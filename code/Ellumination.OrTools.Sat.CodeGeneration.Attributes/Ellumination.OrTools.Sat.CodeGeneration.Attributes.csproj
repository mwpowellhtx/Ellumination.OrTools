<Project Sdk="Microsoft.NET.Sdk">

    <!-- So these Attributes are not an 'IsTool', per se, but they can (SHOULD) be referenced as 'PrivateAssets'. -->
    <PropertyGroup>
        <GenerateAssemblyInfo>true</GenerateAssemblyInfo>
        <GeneratePackageOnBuild>true</GeneratePackageOnBuild>
        <Description>Provides a set of Attributes for use during Compilation which in turn signal that Code Generation should occur.</Description>
        <PackageTags>code;generation;Roslyn;CG;CGR;dotnet;Ellumination;operational;research;OR;tools;constraint;programming;CP;satisfaction;SAT;Google;support;protocol;buffer;protobuf;parameter;parameters;attribute;attributes</PackageTags>
    </PropertyGroup>

    <PropertyGroup>
        <TargetFramework>netstandard2.0</TargetFramework>
        <Version>1.1.0.22764</Version>
        <AssemblyVersion>1.1.0.22764</AssemblyVersion>
        <FileVersion>1.1.0.22764</FileVersion>
        <PackageVersion>1.1.0.22764</PackageVersion>
        <!--<ReleaseVersionStrategy>patch</ReleaseVersionStrategy>-->
    </PropertyGroup>

    <PropertyGroup Condition="'$(Platform)'=='AnyCPU'">
        <DocumentationFile>bin\$(Configuration)\netstandard2.0\Ellumination.OrTools.Sat.CodeGeneration.Attributes.xml</DocumentationFile>
    </PropertyGroup>

    <ItemGroup>
        <None Remove="Ellumination.OrTools.Sat.CodeGeneration.Attributes.csproj.DotSettings" />
    </ItemGroup>

    <PropertyGroup>
        <!-- At the moment, the only thing that the CG properties are doing is defining
         a RootNamespace, but since we have one here, then there is no need to include
         those properties. -->
        <RootNamespace>Ellumination.OrTools.Sat.CodeGeneration.Attributes</RootNamespace>
    </PropertyGroup>

    <!-- ReSharper disable UnknownProperty -->
    <ItemGroup>
        <PackageReference Include="Code.Generation.Roslyn.Attributes" Version="$(CodeGenerationRoslynAttributesVersions)" />
    </ItemGroup>
    <!-- ReSharper restore UnknownProperty -->

</Project>
